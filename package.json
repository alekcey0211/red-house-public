{
	"name": "rhf-workspace",
	"version": "1.0.0",
	"description": "",
	"main": "index.js",
	"scripts": {
		"setup": "npm i && npm-run-all install:all build:all papyrus:compile",
		"papyrus:compile": "cd ./compiler/ && del /f /q .papyrus && compile.bat",
		"install:all": "npm-run-all functions:install modules:install client:install server:install front:install",
		"build:all": "npm-run-all functions:build modules:build client:build server:build front:build",
		"skyrim:start": "start.bat",
		"server:start": "cd ./server && npm run start",
		"server:start:exe": "cd ./server && npm run exe",
		"server:start:clean": "npm-run-all server:delete:world server:delete:props server:start",
		"server:start:clean:build:all": "npm-run-all server:delete:world server:delete:props build:all server:start",
		"server:start:clean:game": "npm-run-all skyrim:start server:start:clean ",
		"server:start:game": "npm-run-all skyrim:start server:start ",
		"server:delete:world": "cd ./server/world && del-cli *",
		"server:delete:props": "cd ./server/data/properties && del-cli *.json",
		"server:build": "cd ./server-build && npm run build",
		"server:exe": "cd ./server-build && npm run exe",
		"server:install": "cd ./server-build && npm install",
		"functions:watch": "cd ./functions-lib && npm run serve",
		"functions:build": "cd ./functions-lib && npm run build",
		"functions:test": "cd ./functions-lib && jest --forceExit --coverage --verbose",
		"functions:install": "cd ./functions-lib && npm install",
		"modules:install": "cd ./modules && npm install",
		"modules:build": "cd ./modules && npm run build",
		"modules:watch": "cd ./modules && npm run watch",
		"functions:modules:watch": "concurrently \"npm:functions:watch\" \"npm:modules:watch\"",
		"client:install": "cd ./client && npm i",
		"client:watch": "cd ./client && npm run watch",
		"client:build": "cd ./client && npm run build",
		"client:test": "cd ./client && npm run test",
		"parse:all": "npm run parse:unpack && npm run parse:csv && npm run parse:json",
		"parse:unpack": "cd ./parse-localization/ && bsaUnpack.bat",
		"parse:csv": "cd ./parse-localization/ && stringsToCsv.bat",
		"parse:json": "cd ./parse-localization/ && node csvToJson.js",
		"parse:install": "cd ./parse-localization/ && npm install",
		"git:ignore:refresh": "git rm -r --cached . && git add . && git commit -m \".gitignore is now working\"",
		"git:update": "git add * && git commit -m \"Обновился\" && git push",
		"git:log": "git log --graph --abbrev-commit --decorate --all --format=format:\"%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)\"",
		"xelib:index": "cd xelib && npm run index",
		"xelib:ref": "cd xelib && npm run ref",
		"xelib:exe": "cd xelib && npm run bin",
		"xelib:install": "cd ./xelib && npm install",
		"front:install": "cd ./front && npm i",
		"front:build": "rimraf ./server/data/ui && cd ./front && npm run build:server",
		"front:clear": "rimraf ./server/data/ui",
		"api:register": "cd ./api && npm run register",
		"api:login": "cd ./api && npm run login",
		"api:play": "cd ./api && npm run play",
		"prettier": "prettier --write ./client/**/*.ts ./xelib/**/*.ts ./xelib/**/*.js ./server-build/**/*.ts ./parse-localization/**/*.js ./api/**/*.js ./modules/**/*.ts ./functions-lib/**/*.ts",
		"lint": "eslint ./client/**/*.ts ./xelib/**/*.ts ./server-build/**/*.ts ./modules/**/*.ts ./functions-lib/**/*.ts --ignore-pattern node_modules/ --fix",
		"lint:prettier": "npm-run-all lint prettier"
	},
	"keywords": [],
	"author": "",
	"license": "ISC",
	"devDependencies": {
		"@typescript-eslint/eslint-plugin": "^4.33.0",
		"@typescript-eslint/parser": "^4.33.0",
		"concurrently": "^6.3.0",
		"del-cli": "^4.0.1",
		"eslint": "^7.32.0",
		"eslint-config-airbnb-base": "^14.2.1",
		"eslint-config-prettier": "^8.3.0",
		"eslint-plugin-import": "^2.24.2",
		"eslint-plugin-prettier": "^4.0.0",
		"npm-run-all": "^4.1.5",
		"prettier": "2.4.1",
		"prettier-eslint": "^13.0.0",
		"typescript": "^4.4.3"
	},
	"prettier": "./.prettierrc.json"
}
